{"version":3,"sources":["components/Header.js","components/ImageCard.js","static/places.js","components/PlaceToVisit.js","hook/useWindowPosition.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","fontFamily","appbar","background","appbarWrapper","width","margin","appbarTitle","flexGrow","icon","color","fontSize","colorText","container","textAlign","title","goDown","Header","classes","useState","checked","setChecked","useEffect","className","id","AppBar","elevation","Toolbar","IconButton","Collapse","in","timeout","collapsedHeight","to","smooth","maxWidth","media","transition","transform","fontWeight","desc","ImageCard","place","Card","CardMedia","image","imageUrl","CardContent","Typography","gutterBottom","variant","component","description","places","process","time","minHeight","breakpoints","down","flexDirection","animation","setAnimation","useLayoutEffect","updatePosition","offetSetHeight","window","document","getElementById","offsetHeight","pageYOffset","addEventListener","removeEventListener","useWindowPosition","map","backgroundImage","backgroundRepeat","backgroundSize","App","CssBaseline","PlaceToVisit","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c68ccf7b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, IconButton, Toolbar, Collapse } from \"@material-ui/core\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link as Scroll } from \"react-scroll\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    fontFamily: \"Nunito\",\n  },\n  appbar: {\n    background: \"none\",\n  },\n  appbarWrapper: {\n    width: \"80%\",\n    margin: \"0 auto\",\n  },\n  appbarTitle: {\n    flexGrow: \"1\",\n  },\n  icon: {\n    color: \"#fff\",\n    fontSize: \"2rem\",\n  },\n  colorText: {\n    color: \"#5AFF3D\",\n  },\n  container: {\n    textAlign: \"center\",\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: \"4.5rem\",\n  },\n  goDown: {\n    color: \"#5AFF3D\",\n    fontSize: \"4rem\",\n  },\n}));\nexport default function Header() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    setChecked(true);\n  }, []);\n  return (\n    <div className={classes.root} id=\"header\">\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar className={classes.appbarWrapper}>\n          <h1 className={classes.appbarTitle}>\n            My<span className={classes.colorText}>Island.</span>\n          </h1>\n          <IconButton>\n            <SortIcon className={classes.icon} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Collapse\n        in={checked}\n        {...(checked ? { timeout: 1000 } : {})}\n        collapsedHeight={50}\n      >\n        <div className={classes.container}>\n          <h1 className={classes.title}>\n            Welcome to <br />\n            My<span className={classes.colorText}>Island.</span>\n          </h1>\n          <Scroll to=\"place-to-visit\" smooth={true}>\n            <IconButton>\n              <ExpandMoreIcon id=\"goDown\" className={classes.goDown} />\n            </IconButton>\n          </Scroll>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Collapse } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    background: \"rgba(0,0,0,0.5)\",\n    margin: \"20px\",\n  },\n  media: {\n    height: 300,\n    transition: \"0.5s\",\n    \"&:hover\": {\n      transform: \"scale(1.08)\",\n    },\n  },\n  title: {\n    fontFamily: \"Nunito\",\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n    color: \"#fff\",\n  },\n  desc: {\n    fontFamily: \"Nunito\",\n    fontSize: \"1.1rem\",\n    color: \"#ddd\",\n  },\n});\n\nexport default function ImageCard({ place, checked }) {\n  const classes = useStyles();\n\n  return (\n    <Collapse in={checked} {...(checked ? { timeout: 1000 } : {})}>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={place.imageUrl}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h1\"\n            className={classes.title}\n          >\n            {place.title}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.desc}\n          >\n            {place.description}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n}\n","const places = [\n  {\n    title: \"Green\",\n    description:\n      \"The Maldives are home to some of the world's most ravishing islands, but it's the sea, which truly makes these islands shine. Luminous aquamarine waters with a crystal clarity lap upon these dazzling white shores, which barely peek above the Indian Ocean.\",\n    imageUrl: process.env.PUBLIC_URL + \"/assets/island1.jpg\",\n    time: 1500,\n  },\n  {\n    title: \"Bora Bora\",\n    description:\n      \"Shaped like a giant sombrero, this lush volcanic island stars in countless South Pacific fantasies. The focal point and best asset of this tropical beauty is its ravishing lagoon in technicolor turquoise. Fish, turtles, sharks, and rays swim in the clear waters.\",\n    imageUrl: process.env.PUBLIC_URL + \"/assets/island2.jpg\",\n    time: 1500,\n  },\n  {\n    title: \"New Island\",\n    description:\n      \"Shaped like a giant sombrero, this lush volcanic island stars in countless South Pacific fantasies. The focal point and best asset of this tropical beauty is its ravishing lagoon in technicolor turquoise. Fish, turtles, sharks, and rays swim in the clear waters.\",\n    imageUrl: process.env.PUBLIC_URL + \"/assets/island3.jpg\",\n    time: 1500,\n  },\n];\n\nexport default places;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageCard from \"./ImageCard\";\nimport places from \"../static/places\";\nimport useWindowPosition from \"../hook/useWindowPosition\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"80vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      flexDirection: \"column\",\n    },\n  },\n}));\nexport default function () {\n  const classes = useStyles();\n  const checked = useWindowPosition(\"header\");\n  return (\n    <div className={classes.root} id=\"place-to-visit\">\n      {places.map((place) => (\n        <ImageCard place={place} checked={checked} />\n      ))}\n    </div>\n  );\n}\n","import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id) {\n  const [animation, setAnimation] = useState(false);\n\n  useLayoutEffect(() => {\n    function updatePosition() {\n      const offetSetHeight = window.document.getElementById(id).offsetHeight;\n      if (window.pageYOffset > offetSetHeight * 0.7) {\n        setAnimation(true);\n      }\n    }\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, [id]);\n  return animation;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Header from \"./components/Header\";\nimport PlaceToVisit from \"./components/PlaceToVisit\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${process.env.PUBLIC_URL + \"/assets/bg.jpg\"})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n}));\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <PlaceToVisit />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}